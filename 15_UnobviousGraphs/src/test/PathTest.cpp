#include "../Path.h"
#include <cassert>
#include <iostream>
#include <vector>
#include <tuple>


int main() {
    std::cout << "Path to princess-frog\n";

    std::vector<std::tuple<std::vector<std::vector<int>>, int>> args {
        {
                   {{0, 1, 5, 5, 1, 1, 2},
                    {1, 1, 5, 5, 1, 1, 1},
                    {1, 1, 8, 2, 2, 2, 1},
                    {8, 8, 8, 2, 2, 1, 1},
                    {8, 2, 2, 8, 1, 1, 0}}, 17},
        {
                   {{0, 1, 1},
                    {1, 1, 1},
                    {1, 1, 0}}, 3},
        {
                   {{0, 1, 5},
                    {2, 8, 1},
                    {2, 2, 0}}, 6},
        {
                   {{0, 1, 2},
                    {1, 2, 5},
                    {2, 5, 8},
                    {5, 8, 0}}, 16},
        {
                   {{0, 1, 5, 5, 1, 1, 2, 1, 1, 5, 5, 2, 1, 2, 1, 1, 5, 5, 1, 1, 2},
                    {1, 1, 5, 5, 1, 1, 1, 1, 1, 5, 5, 2, 1, 1, 1, 1, 5, 5, 1, 1, 1},
                    {1, 1, 8, 2, 2, 2, 1, 1, 1, 8, 2, 2, 2, 1, 1, 1, 8, 2, 2, 2, 1},
                    {8, 8, 8, 2, 2, 5, 1, 8, 8, 8, 2, 2, 5, 1, 8, 8, 8, 2, 2, 1, 1},
                    {8, 8, 8, 2, 2, 1, 5, 8, 8, 8, 2, 2, 1, 5, 8, 8, 8, 2, 2, 1, 1},
                    {8, 8, 8, 2, 2, 5, 1, 8, 8, 8, 2, 2, 5, 1, 8, 8, 8, 2, 2, 1, 1},
                    {8, 8, 8, 2, 2, 1, 5, 8, 8, 8, 2, 2, 1, 5, 8, 8, 8, 2, 2, 1, 1},
                    {8, 8, 8, 2, 2, 1, 1, 8, 8, 8, 2, 2, 5, 1, 8, 8, 8, 2, 2, 1, 1},
                    {8, 8, 8, 2, 2, 1, 1, 8, 8, 8, 2, 2, 1, 5, 8, 8, 8, 2, 2, 1, 1},
                    {8, 8, 8, 2, 2, 1, 1, 8, 8, 8, 2, 2, 5, 1, 8, 8, 8, 2, 2, 1, 1},
                    {8, 2, 2, 8, 1, 1, 1, 8, 2, 2, 8, 1, 1, 0, 8, 2, 2, 8, 1, 1, 0}}, 54}
    };

    for (auto arg : args) {
        assert(std::get<1>(arg) == Path::shortestPathDuration(std::get<0>(arg)));
    }

    return 0;
}
